FROM alpine:latest AS base

RUN apk add --virtual .asdf-deps --no-cache bash curl git 
SHELL ["/bin/bash", "-l", "-c"]
# RUN adduser -s /bin/bash -h /asdf -D asdf
ENV PATH="${PATH}:/root/.asdf/shims:/root/.asdf/bin"

# USER asdf
# WORKDIR /asdf

RUN git clone --depth 1 https://github.com/asdf-vm/asdf.git $HOME/.asdf && \
    echo -e '\n. $HOME/.asdf/asdf.sh' >> ~/.bashrc && \
    echo -e '\n. $HOME/.asdf/asdf.sh' >> ~/.profile && \
    source ~/.bashrc && \
    mkdir -p $HOME/.asdf/toolset


# Pull latest asdf
RUN asdf update --head

# start erlang install
# USER root
RUN set -e && \
    # Erlang dependencies, shamelesly borrowed from bitwalker's alpine-erlang image.
    apk add --no-cache musl-dev musl && \
    # Add edge repos tagged so that we can selectively install edge packages
    echo "@edge http://nl.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories && \
    apk add --no-cache pcre@edge && \ 
    apk add --no-cache \
    ca-certificates \
    openssl-dev \
    ncurses-dev \
    unixodbc-dev \
    zlib-dev && \
    # Install Erlang/OTP build deps
    apk add --no-cache --virtual .erlang-build \
    git autoconf build-base perl-dev && \
    # Install Node and NPM
    apk add --update nodejs npm && \
    apk add inotify-tools


# USER asdf
RUN asdf plugin add erlang
RUN asdf install erlang latest
RUN asdf global erlang $(asdf list erlang)
RUN asdf plugin add elixir
RUN asdf install elixir latest
RUN asdf global elixir $(asdf list elixir)

RUN mix do local.hex --force, local.rebar --force

CMD ["/bin/bash"]